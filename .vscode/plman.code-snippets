{
	// Place your plman workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"multiview": {
		"scope": "prolog",
		"prefix": "multiView",
		"body": [
			"do(move($1)) :-",
			"  multiView(",
			"    '${2: }', '${3: }', '${4: }',",
			"    '${5: }', '${10: }', '${6: }',",
			"    '${7: }', '${8: }', '${9: }'),",
			"  writeln('multiView to $1')."
		],
		"description": "To move watching all enviroment"
	},

	"visionLeft": {
		"scope": "prolog",
		"prefix": "visionLeft",
		"body": [
			"do(move($1)) :-",
			"  visionLeft(",
			"    '${2: }', /**//**/",
			"    '${3: }', '${5: }'/**/,",
			"    '${4: }' /**//**/),",
			"  writeln('visionLeft to $1')."
		],
		"description": "To move watching left side"
	},

	"visionRight": {
		"scope": "prolog",
		"prefix": "visionRight",
		"body": [
			"do(move($1)) :-",
			"  visionRight(",
			"    /**//**/'${2: }',",
			"    /**/'${5: }','${3: }',",
			"    /**//**/'${4: }'),",
			"  writeln('visionRight to $1')."
		],
		"description": "To move watching Right side"
	},

	"visionUp": {
		"scope": "prolog",
		"prefix": "visionUp",
		"body": [
			"do(move($1)) :-",
			"  visionUp(",
			"    '${2: }','${3: }','${4: }',",
			"    /**/'${5: }' /**/",
			"    /**//**//**/),",
			"  writeln('visionUp to $1')."
		],
		"description": "To move watching Up side"
	},
//Hacer vision Down

}
